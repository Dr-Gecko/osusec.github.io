<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tamuctf on OSU Security Club</title><link>https://osusec.org/tags/tamuctf/</link><description>Recent content in tamuctf on OSU Security Club</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 29 Mar 2020 00:00:00 -0700</lastBuildDate><atom:link href="https://osusec.org/tags/tamuctf/index.xml" rel="self" type="application/rss+xml"/><item><title>TAMUCTF - ALCAPONE</title><link>https://osusec.org/blog/tamuctf-alcapone/</link><pubDate>Sun, 29 Mar 2020 00:00:00 -0700</pubDate><guid>https://osusec.org/blog/tamuctf-alcapone/</guid><description>Prompt Eliot Ness is the lead on taking down Al Capone. He has gained access to Capone’s personal computer but being the good detective he is, he got the disk image of the computer rather than look through the actual computer. Can you help Ness out and find any information to take down the mob boss?
(hint: Al Capone knew his computer was going to be taken soon, so he deleted all important data to ensure no one could see it.</description></item><item><title>TAMUCTF - GEOGRAPHY</title><link>https://osusec.org/blog/tamuctf-geography/</link><pubDate>Sun, 29 Mar 2020 00:00:00 -0700</pubDate><guid>https://osusec.org/blog/tamuctf-geography/</guid><description>Prompt My friend told me that she found something cool on the Internet, but all she sent me was 11000010100011000111111111101110 and 11000001100101000011101111011111.
She’s always been a bit cryptic. She told me to “surround with gigem{} that which can be seen from a bird’s eye view”… what?
Solution Ok. We know that we need to somehow interpret those binary strings as coordinate(s) to get a location that we can look at from “bird’s eye view” (presumably on Google Maps).</description></item><item><title>TAMUCTF - RUSSIAN_NESTING_DOLLS</title><link>https://osusec.org/blog/tamuctf-russian_nesting_dolls/</link><pubDate>Sun, 29 Mar 2020 00:00:00 -0700</pubDate><guid>https://osusec.org/blog/tamuctf-russian_nesting_dolls/</guid><description>Prompt Our monitoring systems noticed some funny-looking DNS traffic on one of our computers. We have the network logs from around the time of the incident. Want to take a look?
Files: netlogs.pcap
Solution Opening the PCAP up in wireshark shows that there are quite a few (37991) DNS packets, as well as a smattring of others (Statistics &amp;gt; Protocol Hierarchy). Let’s look at the remaining packets first, as there are only a few of them:</description></item><item><title>TAMUCTF - WOOF_WOOF</title><link>https://osusec.org/blog/tamuctf-woof_woof/</link><pubDate>Sun, 29 Mar 2020 00:00:00 -0700</pubDate><guid>https://osusec.org/blog/tamuctf-woof_woof/</guid><description>Prompt (I did not get the prompt text in time, and admin closed access to the challs when the CTF ended :()
The instructions mentioned charset A-Z and ‘-‘ and ‘@’, with flag format GIGEM-....
reveille.png
Solution After running strings on the image to no result, we open this image up in stegsolve, and examine the file format Analyze &amp;gt; File Format. We see the usual stuff, except for:
Comment data Length: 1aa (426) Dump of data: Hex: 01aa776f6f662077 6f6f66206261726b 2072756666206261 726b206261726b20 7275666620776f6f 6620776f6f662062 61726b2072756666 206261726b207275 666620776f6f6620 776f6f6620727566 6620776f6f662062 61726b206261726b 206261726b206261 726b20776f6f6620 7275666620776f6f 66206261726b2062 61726b2072756666 20776f6f6620776f 6f6620776f6f6620 776f6f6620776f6f 6620727566662077 6f6f6620776f6f66 206261726b207275 666620776f6f6620 7275666620626172 6b20776f6f662077 6f6f66206261726b 20776f6f66206261 726b207275666620 6261726b20626172 6b206261726b2072 75666620776f6f66 2072756666206261 726b20776f6f6620 776f6f6620776f6f 6620776f6f662072 75666620776f6f66 206261726b20776f 6f66206261726b20 7275666620626172 6b20776f6f662077 6f6f6620776f6f66 207275666620776f 6f6620776f6f6620 776f6f6620776f6f 6620776f6f662072 75666620776f6f66 206261726b206261 726b206261726b20 7275666620776f6f 66206261726b2062 61726b206261726b 206261726b20776f 6f66 Ascii: .</description></item><item><title>TAMUCTF RSAPWN</title><link>https://osusec.org/blog/tamuctf-rsapwn/</link><pubDate>Sun, 29 Mar 2020 00:00:00 -0700</pubDate><guid>https://osusec.org/blog/tamuctf-rsapwn/</guid><description>Prompt We must train the next generation of hackers.
nc challenges.tamuctf.com 8573
Solution It looks like this just asks us to find the two “big prime” factors of the number provided, and return them. Athos’ script does exactly that:
python3 ./exploit.py [+] Opening connection to challenges.tamuctf.com on port 8573: Done b&amp;#39;We must train future hackers to break RSA quickly. Here is how this will work.\nI will multiply together two big primes (&amp;lt;= 10000000), give you the result,\nand you must reply to me in less than two seconds telling me what primes I\nmultiplied.</description></item></channel></rss>